# ---- Build stage ----
    FROM node:20-alpine AS build
    WORKDIR /app
    
    # Make sure devDependencies (vue-tsc, vite, etc.) are installed
    ENV NPM_CONFIG_PRODUCTION=false
    # Optional: faster installs on Alpine
    RUN apk add --no-cache libc6-compat
    
    # 1) Install deps first for better caching
    COPY package*.json ./
    RUN npm ci
    
    # 2) Copy ALL tsconfig files early so vue-tsc picks them up
    COPY tsconfig*.json ./
    COPY vite.config.* ./
    
    # 3) Copy the rest of the app
    COPY src ./src
    COPY public ./public
    
    # (Optional) sanity check: see which module setting vue-tsc will use
    # RUN npx vue-tsc --showConfig | grep -i '"module":'
    
    # Type-check + build (same as local)
    RUN npm run type-check && npm run build
    
    # ---- Runtime stage (serve static) ----
    FROM nginx:alpine AS runtime
    # Copy built assets
    COPY --from=build /app/dist /usr/share/nginx/html
    # (Optional) custom nginx.conf if you need history fallback for SPA routes
    # COPY nginx.conf /etc/nginx/conf.d/default.conf
    
    EXPOSE 80
    CMD ["nginx", "-g", "daemon off;"]
    